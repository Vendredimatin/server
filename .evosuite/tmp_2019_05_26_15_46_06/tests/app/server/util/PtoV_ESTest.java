/*
 * This file was automatically generated by EvoSuite
 * Sun May 26 07:50:05 GMT 2019
 */

package app.server.util;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import app.server.bean.Comment;
import app.server.bean.Course;
import app.server.util.PtoV;
import app.server.vo.CommentVO;
import app.server.vo.CourseVO;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.util.MockDate;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class PtoV_ESTest extends PtoV_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      PtoV ptoV0 = PtoV.ptoV;
      Course course0 = new Course();
      CourseVO courseVO0 = ptoV0.getCourseVO(course0);
      assertFalse(courseVO0.isAnonymous());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      PtoV ptoV0 = PtoV.ptoV;
      // Undeclared exception!
      try { 
        ptoV0.getCourseVO((Course) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("app.server.util.PtoV", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Comment comment0 = new Comment();
      PtoV ptoV0 = PtoV.ptoV;
      // Undeclared exception!
      try { 
        ptoV0.getCommentVO(comment0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      PtoV ptoV0 = PtoV.ptoV;
      MockDate mockDate0 = new MockDate();
      Comment comment0 = new Comment(0, "Ty's7DO7$gWhO0WNS", (String) null, "Ty's7DO7$gWhO0WNS", mockDate0, 0, 0, 0, 3, 3);
      CommentVO commentVO0 = ptoV0.ptoV.getCommentVO(comment0);
      assertEquals("Ty's7DO7$gWhO0WNS", commentVO0.getComment());
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      PtoV ptoV0 = PtoV.ptoV;
      Course course0 = new Course("eV~@<@oRo.7V`", "eV~@<@oRo.7V`", "eV~@<@oRo.7V`", 878, 1664, 841, 2023, 1664, true);
      CourseVO courseVO0 = ptoV0.getCourseVO(course0);
      assertEquals("eV~@<@oRo.7V`", courseVO0.getTeacherName());
  }
}
