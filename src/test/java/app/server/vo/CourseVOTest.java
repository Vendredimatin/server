/*
 * This file was automatically generated by EvoSuite
 * Mon May 27 07:46:51 CST 2019
 */

package app.server.vo;

import static org.junit.Assert.assertFalse;
import static org.junit.Assert.assertTrue;

import java.util.ArrayList;

import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.Test;
import org.junit.runner.RunWith;
import org.springframework.boot.test.context.SpringBootTest;
import org.springframework.test.context.junit4.SpringRunner;

@RunWith(SpringRunner.class)
@SpringBootTest
public class CourseVOTest{

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      CourseVO courseVO0 = new CourseVO();
      assertFalse(courseVO0.isAnonymous());
      
      courseVO0.setAnonymous(true);
      assertTrue(courseVO0.isAnonymous());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      CourseVO courseVO0 = new CourseVO();
      assertFalse(courseVO0.isCollect());
      
      courseVO0.setCollect(true);
      boolean boolean0 = courseVO0.isCollect();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      CourseVO courseVO0 = new CourseVO();
      assertFalse(courseVO0.isAnonymous());
      
      courseVO0.setAnonymous(true);
      boolean boolean0 = courseVO0.isAnonymous();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      CourseVO courseVO0 = new CourseVO();
      courseVO0.setTeacherName("C");
      courseVO0.getTeacherName();
      assertFalse(courseVO0.isCollect());
      assertFalse(courseVO0.isAnonymous());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      CourseVO courseVO0 = new CourseVO();
      courseVO0.setTeacherName("");
      courseVO0.getTeacherName();
      assertFalse(courseVO0.isAnonymous());
      assertFalse(courseVO0.isCollect());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      CourseVO courseVO0 = new CourseVO();
      courseVO0.setScoreList((ArrayList<Double>) null);
      courseVO0.getScoreList();
      assertFalse(courseVO0.isAnonymous());
      assertFalse(courseVO0.isCollect());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      CourseVO courseVO0 = new CourseVO();
      ArrayList<Double> arrayList0 = courseVO0.getScoreList();
      Double integer0 = new Double(0);
      arrayList0.add(integer0);
      courseVO0.getScoreList();
      assertFalse(courseVO0.isAnonymous());
      assertFalse(courseVO0.isCollect());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      CourseVO courseVO0 = new CourseVO();
      courseVO0.setName("1");
      courseVO0.getName();
      assertFalse(courseVO0.isAnonymous());
      assertFalse(courseVO0.isCollect());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      CourseVO courseVO0 = new CourseVO();
      courseVO0.setName("");
      courseVO0.getName();
      assertFalse(courseVO0.isAnonymous());
      assertFalse(courseVO0.isCollect());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      CourseVO courseVO0 = new CourseVO();
      courseVO0.setId("M");
      courseVO0.getId();
      assertFalse(courseVO0.isAnonymous());
      assertFalse(courseVO0.isCollect());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      CourseVO courseVO0 = new CourseVO();
      courseVO0.setId("");
      courseVO0.getId();
      assertFalse(courseVO0.isAnonymous());
      assertFalse(courseVO0.isCollect());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      CourseVO courseVO0 = new CourseVO();
      courseVO0.getTeacherName();
      assertFalse(courseVO0.isAnonymous());
      assertFalse(courseVO0.isCollect());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      CourseVO courseVO0 = new CourseVO();
      boolean boolean0 = courseVO0.isAnonymous();
      assertFalse(boolean0);
      assertFalse(courseVO0.isCollect());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      CourseVO courseVO0 = new CourseVO();
      courseVO0.getId();
      assertFalse(courseVO0.isAnonymous());
      assertFalse(courseVO0.isCollect());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      CourseVO courseVO0 = new CourseVO();
      boolean boolean0 = courseVO0.isCollect();
      assertFalse(boolean0);
      assertFalse(courseVO0.isAnonymous());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      CourseVO courseVO0 = new CourseVO();
      courseVO0.getName();
      assertFalse(courseVO0.isCollect());
      assertFalse(courseVO0.isAnonymous());
  }
}
